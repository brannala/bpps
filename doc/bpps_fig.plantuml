@startuml

class Main {
	+ state: seqFileText sequenceData locusArray locusCounts uniqSeqNames
	==
	ReadFile()
	--
	imports: SeqRead()
}

class SeqRead {
	==
	SeqRead()
	}

class Sequences {
	state: posInLocusArray
	..
	props: locusArray locusCounts ReadFile()
	==
	handleScanClickUp(e) handleScanClickDown(e) initPosInLocusArray()
	..
	UI: button(+) button(-)	
	}

class MapFile {
	state: seqMatches RegExp_SpName filters
	..
	props: sequenceData uniqSeqNames
	==
	addFilter()
	--
	imports: seqToSpecName()
	..
	UI: form_input form_input button(add)		
}

class CtrlFile {
	state: mapData
	..
	props: ReadFile()
	==
	MapFileUpload() handleMapFileRead()
	}


class GetFile {
	state: uploadedFileContents waitingForFileUpload
	..
	props: initPosInLocusArray() ReadFile() fileType
	..
	UI: input "file"		
		}

class DisplaySeqs {
	state:
	..
	props: locusText
	..
	UI: textarea		
}

class DisplayUnmatchedSeqs {
	state:
	..
	props: seqMatches
	==
	getUnmatchedAsString()
	..
	UI: textarea		
}

class DisplayFilters {
	state:
	..
	props: filters
	==
	createFilters()
	..
	UI: <ul> list		
}

class DisplayMatchedSeqs {
	state:
	..
	props: seqMatches
	==
	getMatchedAsString()		
	..
	UI: textarea
}
			

class FormatSeqs {
	==
	formatSeqs() getCounts()
}
			
class MapFunctions {
	==
	uniqueSeqNames() seqToSpecName()
}	

class CtrlFunc {
	==
	ParseMapText() pairwiseDistance()
}
					
Main ---+ Sequences : locusArray \n locusCounts \n ReadFile()
Main ---|> MapFile : sequenceData 
Main ---|> CtrlFile : sequenceData
Sequences ---+ GetFile : initPosInLocusArray() \n ReadFile() \n fileType
Sequences --|> DisplaySeqs : locusText
MapFile --|> DisplayUnmatchedSeqs : seqMatches
MapFile --|> DisplayMatchedSeqs : seqMatches
MapFile --|> DisplayFilters : filters	
SeqRead ..> Main : SeqRead()
FormatSeqs ..> Main : formatSeqs() \n getCounts()
CtrlFile ---+ GetFile: handleMapFileRead \n fileType
MapFunctions ..> MapFile : seqToSpecName() \n uniqSeqNames
CtrlFunc ..> CtrlFile : ParseMapText()					
@enduml
